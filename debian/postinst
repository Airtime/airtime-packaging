#!/bin/bash
#postinst script for airtime

set -e

. /usr/share/debconf/confmodule

if [ "$DPKG_DEBUG" = "developer" ]; then
    set -x
fi

WEB_USER=www-data
WEB_GROUP=www-data

package_name="airtime"
datadir="/srv/airtime"
wwwdir="/usr/share/airtime"
tmpdir="/var/lib/airtime/tmp"
configdir="/etc/airtime"
includefile="${configdir}/apache.conf"
a2tplfile="${configdir}/apache.vhost.tpl"
phpinifile="${configdir}/airtime.ini"
OLDVERSION="$2"
NEWVERSION="1.9.4"

case "$1" in
  configure|reconfigure)

    #webserver=`echo $webserver|sed -e 's/,  */ /g'`
    webserver="apache2"
    php="php5"
    dohtaccess=""

    #  clean up previous configurations
    if [ -L /etc/$webserver/conf.d/airtime.conf ]; then
      rm -f /etc/$webserver/conf.d/airtime.conf
      restart="$webserver $restart"
    fi
    if [ -f /etc/$webserver/sites-available/airtime-vhost ]; then
      a2dissite airtime-vhost
      restart="$webserver $restart"
    fi

    # this file in 1.8.2 is a directory path in 1.9.3
    if [ -f /var/www/airtime/utils/airtime-import ]; then
      rm -f /var/www/airtime/utils/airtime-import
    fi

    # Install phing
    pear channel-discover pear.phing.info || true
    pear install phing/phing-2.4.2 || true

    # APACHE config

    # create the document root if it doesn't exist
    if [ ! -d $wwwdir/public/ ]; then
      install -d -m755 $wwwdir/public/
    fi

    db_get airtime/apache-setup
    if [ "$RET" == "system-wide (all vhosts)" ]; then
      if [ ! -d /etc/$webserver/conf.d/ ]; then
        install -d -m755 /etc/$webserver/conf.d/
      fi
      if [ ! -e /etc/$webserver/conf.d/airtime.conf ]; then
        ln -s ${includefile} /etc/$webserver/conf.d/airtime.conf
        restart="$webserver $restart"
      fi
      a2enmod rewrite
      dohtaccess="/airtime"
    elif [ "$RET" == "dedicated v-host" ]; then
      db_get airtime/apache-servername
      SN=$RET
      db_get airtime/apache-serveradmin
      SA=$RET

      if [ ! -d /etc/$webserver/sites-available/ ]; then
        install -d -m755 /etc/$webserver/sites-available/
      fi
      sed -e "s/__SERVER_ADMIN__/${SA}/;s/__SERVER_NAME__/${SN}/" \
        ${a2tplfile} > /etc/$webserver/sites-available/airtime-vhost
      a2ensite airtime-vhost
	a2enmod rewrite
      restart="$webserver $restart"
      dohtaccess="/"
    fi

    db_get airtime/apache-deldefault
    if [ "$RET" == "remove default" ]; then
      if [ -f /etc/apache2/sites-available/default ]; then
      a2dissite default
      fi
    fi

    # PHP config
    if [ ! -d /etc/$php/conf.d/ ]; then
      install -d -m755 /etc/$php/conf.d/
    fi
    if [ ! -e /etc/$php/conf.d/airtime.ini ]; then
      ln -s ${phpinifile} /etc/$php/conf.d/airtime.ini
      restart="$webserver $restart"
    fi

    # XXX ICECAST XXX
    db_get airtime/icecast-setup
    if [ "$RET" == "true" ]; then
      if [ -f /etc/default/icecast2 -a -f /etc/icecast2/icecast.xml ]; then
        echo "Setting up icecast2.."
        echo -ne "%s/^.*ENABLE=.*$/ENABLE=true/\nwq\n" | ed /etc/default/icecast2
        db_get airtime/icecast-sourcepw
        ICESOURCE=$RET
        sed -i "s:<source-password>.*<\/source-password>:<source-password>$ICESOURCE<\/source-password>:g" /etc/icecast2/icecast.xml
        db_get airtime/icecast-relaypw
        ICERELAY=$RET
        sed -i "s:<relay-password>.*<\/relay-password>:<relay-password>$ICERELAY<\/relay-password>:g" /etc/icecast2/icecast.xml
        db_get airtime/icecast-adminpw
        ICEADMIN=$RET
        sed -i "s:<admin-password>.*<\/admin-password>:<admin-password>$ICEADMIN<\/admin-password>:g" /etc/icecast2/icecast.xml
        db_get airtime/icecast-hostname
        ICEHOST=$RET
        sed -i "s:<hostname>.*<\/hostname>:<hostname>$ICEHOST<\/hostname>:g" /etc/icecast2/icecast.xml

        # restart icecast server
        invoke-rc.d icecast2 restart || true

          # save icecast hostname and source-password in airtime
          db_get airtime/icecast-hostname
          ICEHOST=$RET
          echo -ne "%s/^.*icecast_host.*$/icecast_host = \"$ICEHOST\"/\nwq\n" \
          | ed ${tmpdir}/python_apps/pypo/liquidsoap_scripts/liquidsoap.cfg
            if [ -f ${wwwdir}/python_apps/pypo/liquidsoap_scripts/liquidsoap.cfg ]; then
            echo -ne "%s/^.*icecast_host.*$/icecast_host = \"$ICEHOST\"/\nwq\n" \
            | ed ${wwwdir}/python_apps/pypo/liquidsoap_scripts/liquidsoap.cfg
            fi
          db_get airtime/icecast-sourcepw
          ICESOURCE=$RET
          echo -ne "%s/^.*icecast_pass.*$/icecast_pass = \"$ICESOURCE\"/\nwq\n" \
          | ed ${tmpdir}/python_apps/pypo/liquidsoap_scripts/liquidsoap.cfg
            if [ -f ${wwwdir}/python_apps/pypo/liquidsoap_scripts/liquidsoap.cfg ]; then
            echo -ne "%s/^.*icecast_pass.*$/icecast_pass = \"$ICESOURCE\"/\nwq\n" \
            | ed ${wwwdir}/python_apps/pypo/liquidsoap_scripts/liquidsoap.cfg
            fi

            # on reconfigure or upgrade, also update the liquidsoap.cfg file and restart playout
            if [ -f /etc/airtime/liquidsoap.cfg ]; then
            db_get airtime/icecast-hostname
            ICEHOST=$RET
            echo -ne "%s/^.*icecast_host.*$/icecast_host = \"$ICEHOST\"/\nwq\n" \
            | ed /etc/airtime/liquidsoap.cfg
            db_get airtime/icecast-sourcepw
            ICESOURCE=$RET
            echo -ne "%s/^.*icecast_pass.*$/icecast_pass = \"$ICESOURCE\"/\nwq\n" \
            | ed /etc/airtime/liquidsoap.cfg
              if [ -f /etc/init.d/airtime-playout ]; then
              invoke-rc.d airtime-playout restart
              fi
            fi
      else
        echo "Icecast not installed"
      fi
    fi

    # Monit setup
    db_get airtime/monit-setup
    if [ "$RET" == "true" ]; then
      if [ -f /etc/default/monit ]; then
        echo "Setting up monit.."
         sed -i 's:startup=.*:startup=1:g' /etc/default/monit
          cp ${tmpdir}/python_apps/monit/airtime-monit.cfg /etc/monit/conf.d
           grep -q "include /etc/monit/conf.d" /etc/monit/monitrc
           RETVAL=$?
           if [ $RETVAL -ne 0 ] ; then
           echo "include /etc/monit/conf.d/*" >> /etc/monit/monitrc
           fi
            invoke-rc.d monit restart
      else
        echo "Monit not installed"
      fi
    fi

    # Local timezone setup
    db_get airtime/localtime-setup
     LOCALTIMEZONE=$RET
      if [ -f ${tmpdir}/airtime_mvc/public/.htaccess ]; then
        echo "Setting local time zone.."
         sed -i "s:php_value date.timezone \".*\":php_value date.timezone \"$LOCALTIMEZONE\":g" ${tmpdir}/airtime_mvc/public/.htaccess
      else
       if [ -f ${wwwdir}/public/.htaccess ]; then
        echo "Updating local time zone.."
         sed -i "s:php_value date.timezone \".*\":php_value date.timezone \"$LOCALTIMEZONE\":g" ${wwwdir}/public/.htaccess
        else
       echo ".htaccess file not found"
       fi
      fi

    # stop debconf so daemons started by the install script cannot hold open the pipe
    db_stop

    # start rabbitmq if it isn't running
    if [ -f /etc/init.d/rabbitmq-server ]; then
      invoke-rc.d rabbitmq-server status
        RETVAL=$?
        if [ $RETVAL -ne 0 ]; then
           invoke-rc.d rabbitmq-server start
        fi
    fi

    # Warn if rabbitmq is not set to start on boot
    ls /etc/rc2.d/|grep rabbitmq
      RETVAL=$?
       if [ $RETVAL -ne 0 ]; then
        echo "Warning: rabbitmq-server is not configured to start after a reboot!"
        echo "Fix Default-Start and Default-Stop in /etc/init.d/rabbitmq-server"
        echo "then run this command as root: update-rc.d rabbitmq-server defaults"
       fi

    # create data dir
    mkdir -p $datadir

    dpkg-statoverride --list $datadir || true
    dpkg-statoverride --add --force --update $WEB_USER $WEB_GROUP 0750 $datadir

    servers="apache2"
    . /usr/share/wwwconfig-common/restart.sh
    echo $error

    # don't run airtime-install if the user is doing a dpkg-reconfigure
    if [ "$1" = "reconfigure" ] || [ -n "$DEBCONF_RECONFIGURE" ] ; then
      echo "Reconfiguration complete."
    else

      if [ "${OLDVERSION:0:3}" = "1.6" ]; then
        echo "Upgrades from Airtime versions before 1.7.0 are not supported. Please back up your files and perform a clean install."
      else

        mkdir -p /var/log/airtime
        cd $tmpdir/install_minimal/

        if [ "${OLDVERSION:0:5}" == "${NEWVERSION}" ] ; then
          echo "Reinstallation detected..."
          echo | ./airtime-install -rp 2> /var/log/airtime/reinstallation-errors.log
        else

          ./airtime-install 2> /var/log/airtime/installation-errors.log

        fi
      fi
    fi
  ;;

  abort-upgrade|abort-remove|abort-deconfigure)

  ;;

  *)
       echo "postinst called with unknown argument \`$1'" >&2
       exit 1
  ;;
esac

#DEBHELPER#

exit 0
